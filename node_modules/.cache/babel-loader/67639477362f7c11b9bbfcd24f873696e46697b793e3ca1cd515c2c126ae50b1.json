{"ast":null,"code":"import _slicedToArray from\"/home/wesley-waka/Development/vs_deployed/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React from \"react\";\n// import LoginDashboard from \"./LoginDashboard\";\n// import PlagiarismChecker from \"./PlagiarismChecker\";\n// import StudentSideBar from \"./StudentSideBar\";\n// function Chat() {\n//   const isLoggedIn = sessionStorage.getItem(\"jwtToken\") ? true : false;\n//   return (\n//     <>\n//     { isLoggedIn ? (\n//       <div>\n//         <PlagiarismChecker />\n//         <StudentSideBar />\n//       </div>\n//     )\n//   : (\n//     <>\n//     <div className=\"text-5xl\" style={{ text:\"center\", paddingTop:\"200px\", paddingLeft:\"500px\"}} >\n//      <h1> Login to access the chat section</h1>\n//     </div>\n//      <LoginDashboard />\n//      </>\n//   )\n//   }\n//     </>\n//   );\n// }\n// export default Chat;\n// import React, { useState, useEffect } from 'react';\n// const Chat = ({ courseId }) => {\n//   const [messages, setMessages] = useState([]);\n//   const [newMessage, setNewMessage] = useState();\n//   // const [chats, setChats] = useState();\n//   const token = localStorage.getItem(\"jwt\");\n//   useEffect(() => {\n//     // TODO: fetch messages for the given course ID from the server\n//     fetch(\"/chats\", {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${token}`,\n//       },\n//     })\n//       .then((response) => response.json())\n//       .then((data) => setMessages(data));\n//     // ]);\n//   }, [courseId]);\n//   const handleNewMessageChange = (event) => {\n//     setNewMessage(event.target.value);\n//   };\n//   const handleSendMessage = (event) => {\n//     event.preventDefault();\n//     // TODO: send the new message to the server\n//     const newId = messages.length + 1;\n//     const newMessageObj = { id: newId, sender: 'You', text: newMessage };\n//     setMessages([...messages, newMessageObj]);\n//     setNewMessage('');\n//   };\n//   const renderMessage = (message) => (\n//     <div key={message.id}>\n//       <strong>{message.student_id}: </strong>\n//       {message.message}\n//     </div>\n//   );\n//   const renderMessages = () => {\n//     return messages.map(renderMessage);\n//   };\n//   return (\n//     <div>\n//       <h1>Course Chat</h1>\n//       <div>{renderMessages()}</div>\n//       <form onSubmit={handleSendMessage}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Type your message here\"\n//           value={newMessage}\n//           onChange={handleNewMessageChange}\n//         />\n//         <button type=\"submit\">Send</button>\n//       </form>\n//     </div>\n//   );\n// };\n// export default Chat;\nimport React,{useState,useEffect}from\"react\";import{useParams}from'react-router-dom';import{url}from\"../utils/constants\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Chat=function Chat(_ref){var coursesId=_ref.coursesId,studentId=_ref.studentId;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),newMessage=_useState4[0],setNewMessage=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),student=_useState6[0],setStudent=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),course=_useState8[0],setCourse=_useState8[1];var token=localStorage.getItem(\"jwt\");var id=useParams.id;// console.log(coursesId)\nvar filteredMessages=messages.filter(function(message){return message.course===coursesId;});console.log(filteredMessages);useEffect(function(){// Fetch messages from the server for the current course and student\nfetch(\"https://vs-app.herokuapp.com/chats\",{method:\"GET\",// mode: 'no-cors',\nheaders:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}}).then(function(response){return response.json();}).then(function(data){return setMessages(data);});},[]);var handleNewMessageChange=function handleNewMessageChange(event){setNewMessage(event.target.value);};function handleSubmit(e){e.preventDefault();// const user = {\n//     name: name,\n//   email: email,\n//   schoolId: schoolId\n// };\n// console.log(user);\nfetch(\"https://vs-app.herokuapp.com/students\",{method:\"POST\",// mode: 'no-cors',\nheaders:{\"Content-Type\":\"application/json\"// Authorization: `Bearer ${token}`\n},body:JSON.stringify({student_id:student,course_id:course,message:messages})}).then(function(res){return res.json();}).then(function(response){return console.log(response);});}var renderMessage=function renderMessage(message){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[message.student_id,\": \"]}),message.message]},message.id);};var renderMessages=function renderMessages(){return filteredMessages.map(renderMessage);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Course Chat\"}),/*#__PURE__*/_jsx(\"div\",{children:renderMessages()}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your message here\",value:newMessage,onChange:handleNewMessageChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})]})]});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","useParams","url","jsxs","_jsxs","jsx","_jsx","Chat","_ref","coursesId","studentId","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","newMessage","setNewMessage","_useState5","_useState6","student","setStudent","_useState7","_useState8","course","setCourse","token","localStorage","getItem","id","filteredMessages","filter","message","console","log","fetch","method","headers","Authorization","concat","then","response","json","data","handleNewMessageChange","event","target","value","handleSubmit","e","preventDefault","body","JSON","stringify","student_id","course_id","res","renderMessage","children","renderMessages","map","onSubmit","type","placeholder","onChange"],"sources":["/home/wesley-waka/Development/vs_deployed/src/components/Pages/Chat.js"],"sourcesContent":["// import React from \"react\";\n// import LoginDashboard from \"./LoginDashboard\";\n// import PlagiarismChecker from \"./PlagiarismChecker\";\n// import StudentSideBar from \"./StudentSideBar\";\n// function Chat() {\n//   const isLoggedIn = sessionStorage.getItem(\"jwtToken\") ? true : false;\n//   return (\n//     <>\n//     { isLoggedIn ? (\n//       <div>\n//         <PlagiarismChecker />\n//         <StudentSideBar />\n//       </div>\n//     )\n//   : (\n//     <>\n//     <div className=\"text-5xl\" style={{ text:\"center\", paddingTop:\"200px\", paddingLeft:\"500px\"}} >\n//      <h1> Login to access the chat section</h1>\n//     </div>\n//      <LoginDashboard />\n//      </>\n//   )\n//   }\n\n//     </>\n//   );\n// }\n\n// export default Chat;\n\n// import React, { useState, useEffect } from 'react';\n\n// const Chat = ({ courseId }) => {\n//   const [messages, setMessages] = useState([]);\n//   const [newMessage, setNewMessage] = useState();\n\n//   // const [chats, setChats] = useState();\n\n//   const token = localStorage.getItem(\"jwt\");\n\n//   useEffect(() => {\n//     // TODO: fetch messages for the given course ID from the server\n\n//     fetch(\"/chats\", {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${token}`,\n//       },\n//     })\n//       .then((response) => response.json())\n//       .then((data) => setMessages(data));\n\n//     // ]);\n//   }, [courseId]);\n\n//   const handleNewMessageChange = (event) => {\n//     setNewMessage(event.target.value);\n//   };\n\n//   const handleSendMessage = (event) => {\n//     event.preventDefault();\n//     // TODO: send the new message to the server\n//     const newId = messages.length + 1;\n//     const newMessageObj = { id: newId, sender: 'You', text: newMessage };\n//     setMessages([...messages, newMessageObj]);\n//     setNewMessage('');\n//   };\n\n//   const renderMessage = (message) => (\n//     <div key={message.id}>\n//       <strong>{message.student_id}: </strong>\n//       {message.message}\n//     </div>\n//   );\n\n//   const renderMessages = () => {\n//     return messages.map(renderMessage);\n//   };\n\n//   return (\n//     <div>\n//       <h1>Course Chat</h1>\n//       <div>{renderMessages()}</div>\n//       <form onSubmit={handleSendMessage}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Type your message here\"\n//           value={newMessage}\n//           onChange={handleNewMessageChange}\n//         />\n//         <button type=\"submit\">Send</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { url } from \"../utils/constants\";\n\nconst Chat = ({ coursesId, studentId }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [student, setStudent] = useState(\"\");\n  const [course, setCourse] = useState(\"\");\n\n\n\n\n  const token = localStorage.getItem(\"jwt\");\n\n  const { id } = useParams\n\n  // console.log(coursesId)\n\n\n  const filteredMessages = messages.filter(\n    (message) => message.course === coursesId\n  );\n\n  console.log(filteredMessages)\n\n\n\n  useEffect(() => {\n    // Fetch messages from the server for the current course and student\n    fetch(`https://vs-app.herokuapp.com/chats`, {\n      method: \"GET\",\n      // mode: 'no-cors',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => setMessages(data));\n  }, []);\n\n  const handleNewMessageChange = (event) => {\n    setNewMessage(event.target.value);\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // const user = {\n    //     name: name,\n    //   email: email,\n    //   schoolId: schoolId\n    // };\n    // console.log(user);\n\n    fetch(`https://vs-app.herokuapp.com/students`, {\n      method: \"POST\",\n      // mode: 'no-cors',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        student_id: student,\n        course_id: course,\n        message: messages,\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => console.log(response));\n  }\n\n  const renderMessage = (message) => (\n    <div key={message.id}>\n      <strong>{message.student_id}: </strong>\n      {message.message}\n    </div>\n  );\n\n  const renderMessages = () => {\n    return filteredMessages.map(renderMessage);\n  };\n\n  return (\n    <div>\n      <h1>Course Chat</h1>\n      <div>{renderMessages()}</div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Type your message here\"\n          value={newMessage}\n          onChange={handleNewMessageChange}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}