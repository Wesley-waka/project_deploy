{"ast":null,"code":"import _toConsumableArray from\"/home/wesley-waka/Development/vs_deployed/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/wesley-waka/Development/vs_deployed/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useState } from \"react\";\n// import ExamTimer from \"./ExamTimer\";\n// import Test from \"./Test\";\n// // import StudentDashboard from \"./StudentDashboard\";\n// function ExamPage() {\n//   const examDuration = 60 * 30; // 30 minutes\n//   const [isExamStarted, setIsExamStarted] = useState(false);\n//   function handleStartExam() {\n//     setIsExamStarted(true);\n//   }\n//   function handleTimeUp() {\n//     alert(\"Time's up!\");\n//     setIsExamStarted(false);\n//   }\n//   return (\n//     <div>\n//       <div className=\"text-center text-4xl font-black text-orange-500\" style={ {paddingTop:\"30px\"}} >\n//         {isExamStarted ? (\n//           <ExamTimer duration={examDuration} onTimeUp={handleTimeUp} />\n//         ) : (\n//           <button onClick={handleStartExam}>Start Exam</button>\n//         )}\n//       </div>\n//       < Test />\n//     </div>\n//   );\n// }\n// export default ExamPage;\n// import React, { useState, useEffect } from 'react';\n// const ExamPage = () => {\n//   const [timeLeft, setTimeLeft] = useState(60); // 60 seconds for the exam\n//   const [isActive, setIsActive] = useState(true);\n//   const [selectedAnswers, setSelectedAnswers] = useState([]);\n//   const [answers, setAnswers] = useState([\n//     { id: 1, text: 'Option 1', correct: true },\n//     { id: 2, text: 'Option 2', correct: false },\n//     { id: 3, text: 'Option 3', correct: false },\n//     { id: 4, text: 'Option 4', correct: false },\n//     { id: 5, text: 'Option 5', correct: false }\n//   ]);\n//   useEffect(() => {\n//     let interval = null;\n//     if (timeLeft === 0) {\n//       setIsActive(false);\n//     } else if (isActive) {\n//       interval = setInterval(() => {\n//         setTimeLeft(timeLeft - 1);\n//       }, 1000);\n//     }\n//     return () => clearInterval(interval);\n//   }, [timeLeft, isActive]);\n//   const handleFinishExam = (event) => {\n//     event.preventDefault();\n//     submitAnswers();\n//   };\n//   const handleAnswerChange = (event, answerId) => {\n//     const newSelectedAnswers = [...selectedAnswers];\n//     newSelectedAnswers[answerId] = event.target.value;\n//     setSelectedAnswers(newSelectedAnswers);\n//   };\n//   const renderAnswerInputs = () => {\n//     return answers.map((answer, index) => (\n//       <div key={answer.id}>\n//         <label htmlFor={`answer${answer.id}`}>{answer.text}</label>\n//         <input\n//           type=\"radio\"\n//           name={`answer${answer.id}`}\n//           value={answer.id}\n//           checked={selectedAnswers[answer.id - 1] === answer.id}\n//           onChange={(event) => handleAnswerChange(event, answer.id - 1)}\n//           disabled={!isActive}\n//         />\n//       </div>\n//     ));\n//   };\n//   const submitAnswers = () => {\n//     // TODO: submit the selected answers to the server\n//     console.log('Selected answers:', selectedAnswers);\n//   };\n//   return (\n//     <div>\n//       <h1>Exam</h1>\n//       <p>Time Left: {timeLeft} seconds</p>\n//       <form onSubmit={handleFinishExam}>\n//         {renderAnswerInputs()}\n//         {isActive ? (\n//           <button type=\"submit\">\n//             Finish Exam\n//           </button>\n//         ) : (\n//           <div>\n//             {renderAnswerInputs()}\n//             <button type=\"submit\" onClick={submitAnswers}>\n//               Submit Answers\n//             </button>\n//           </div>\n//         )}\n//       </form>\n//     </div>\n//   );\n// };\n// export default ExamPage;\nimport React,{useState,useEffect}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var ExamPage=function ExamPage(){var _useState=useState(60),_useState2=_slicedToArray(_useState,2),timeLeft=_useState2[0],setTimeLeft=_useState2[1];// 60 seconds for the exam\nvar _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isActive=_useState4[0],setIsActive=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),answers=_useState6[0],setAnswers=_useState6[1];useEffect(function(){var interval=null;if(timeLeft===0){setIsActive(false);}else if(isActive){interval=setInterval(function(){setTimeLeft(timeLeft-1);},500);}return function(){return clearInterval(interval);};},[timeLeft,isActive]);var handleFinishExam=function handleFinishExam(event){event.preventDefault();submitAnswers();};var handleAnswerChange=function handleAnswerChange(event,index){var newAnswers=_toConsumableArray(answers);newAnswers[index]=event.target.value;setAnswers(newAnswers);};var renderAnswerInputs=function renderAnswerInputs(){var inputs=[];var _loop=function _loop(i){// 10 questions in the exam\ninputs.push(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"answer\".concat(i),children:[\"Question \",i+1,\":\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"answer\".concat(i),value:answers[i]||\"\",onChange:function onChange(event){return handleAnswerChange(event,i);},disabled:!isActive})]},i));};for(var i=0;i<10;i++){_loop(i);}return inputs;};var submitAnswers=function submitAnswers(){// TODO: submit the answers to the server\n// fetch(\"/students\", {\n//   method: \"POST\",\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     // Authorization: `Bearer ${token}`\n//   },\n//   body: JSON.stringify({\n//     student_id: student,\n//     course_id: course,\n//     message: messages,\n//   }),\n// })\n//   .then((res) => res.json())\n//   .then((response) => console.log(response));\n// console.log(\"Answers submitted:\", answers);\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"mt-5 ml-10\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Exam\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Time Left: \",timeLeft,\" seconds\"]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleFinishExam,children:[renderAnswerInputs(),isActive?/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Finish Exam\"}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:submitAnswers,children:\"Submit Answers\"})})]})]});};export default ExamPage;","map":{"version":3,"names":["React","useState","useEffect","jsxs","_jsxs","jsx","_jsx","ExamPage","_useState","_useState2","_slicedToArray","timeLeft","setTimeLeft","_useState3","_useState4","isActive","setIsActive","_useState5","_useState6","answers","setAnswers","interval","setInterval","clearInterval","handleFinishExam","event","preventDefault","submitAnswers","handleAnswerChange","index","newAnswers","_toConsumableArray","target","value","renderAnswerInputs","inputs","_loop","i","push","children","htmlFor","concat","type","id","onChange","disabled","className","onSubmit","onClick"],"sources":["/home/wesley-waka/Development/vs_deployed/src/components/Pages/ExamPage.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import ExamTimer from \"./ExamTimer\";\n// import Test from \"./Test\";\n// // import StudentDashboard from \"./StudentDashboard\";\n\n// function ExamPage() {\n//   const examDuration = 60 * 30; // 30 minutes\n//   const [isExamStarted, setIsExamStarted] = useState(false);\n\n//   function handleStartExam() {\n//     setIsExamStarted(true);\n//   }\n\n//   function handleTimeUp() {\n//     alert(\"Time's up!\");\n//     setIsExamStarted(false);\n//   }\n//   return (\n//     <div>\n//       <div className=\"text-center text-4xl font-black text-orange-500\" style={ {paddingTop:\"30px\"}} >\n//         {isExamStarted ? (\n//           <ExamTimer duration={examDuration} onTimeUp={handleTimeUp} />\n//         ) : (\n//           <button onClick={handleStartExam}>Start Exam</button>\n//         )}\n//       </div>\n\n//       < Test />\n//     </div>\n//   );\n// }\n\n// export default ExamPage;\n\n\n// import React, { useState, useEffect } from 'react';\n\n// const ExamPage = () => {\n//   const [timeLeft, setTimeLeft] = useState(60); // 60 seconds for the exam\n//   const [isActive, setIsActive] = useState(true);\n//   const [selectedAnswers, setSelectedAnswers] = useState([]);\n//   const [answers, setAnswers] = useState([\n//     { id: 1, text: 'Option 1', correct: true },\n//     { id: 2, text: 'Option 2', correct: false },\n//     { id: 3, text: 'Option 3', correct: false },\n//     { id: 4, text: 'Option 4', correct: false },\n//     { id: 5, text: 'Option 5', correct: false }\n//   ]);\n\n//   useEffect(() => {\n//     let interval = null;\n//     if (timeLeft === 0) {\n//       setIsActive(false);\n//     } else if (isActive) {\n//       interval = setInterval(() => {\n//         setTimeLeft(timeLeft - 1);\n//       }, 1000);\n//     }\n//     return () => clearInterval(interval);\n//   }, [timeLeft, isActive]);\n\n//   const handleFinishExam = (event) => {\n//     event.preventDefault();\n//     submitAnswers();\n//   };\n\n//   const handleAnswerChange = (event, answerId) => {\n//     const newSelectedAnswers = [...selectedAnswers];\n//     newSelectedAnswers[answerId] = event.target.value;\n//     setSelectedAnswers(newSelectedAnswers);\n//   };\n\n//   const renderAnswerInputs = () => {\n//     return answers.map((answer, index) => (\n//       <div key={answer.id}>\n//         <label htmlFor={`answer${answer.id}`}>{answer.text}</label>\n//         <input\n//           type=\"radio\"\n//           name={`answer${answer.id}`}\n//           value={answer.id}\n//           checked={selectedAnswers[answer.id - 1] === answer.id}\n//           onChange={(event) => handleAnswerChange(event, answer.id - 1)}\n//           disabled={!isActive}\n//         />\n//       </div>\n//     ));\n//   };\n\n//   const submitAnswers = () => {\n//     // TODO: submit the selected answers to the server\n//     console.log('Selected answers:', selectedAnswers);\n//   };\n\n//   return (\n//     <div>\n//       <h1>Exam</h1>\n//       <p>Time Left: {timeLeft} seconds</p>\n//       <form onSubmit={handleFinishExam}>\n//         {renderAnswerInputs()}\n//         {isActive ? (\n//           <button type=\"submit\">\n//             Finish Exam\n//           </button>\n//         ) : (\n//           <div>\n//             {renderAnswerInputs()}\n//             <button type=\"submit\" onClick={submitAnswers}>\n//               Submit Answers\n//             </button>\n//           </div>\n//         )}\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ExamPage;\n\nimport React, { useState, useEffect } from \"react\";\n\nconst ExamPage = () => {\n  const [timeLeft, setTimeLeft] = useState(60); // 60 seconds for the exam\n  const [isActive, setIsActive] = useState(true);\n  const [answers, setAnswers] = useState([]);\n\n  useEffect(() => {\n    let interval = null;\n    if (timeLeft === 0) {\n      setIsActive(false);\n    } else if (isActive) {\n      interval = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 500);\n    }\n    return () => clearInterval(interval);\n  }, [timeLeft, isActive]);\n\n  const handleFinishExam = (event) => {\n    event.preventDefault();\n    submitAnswers();\n  };\n\n  const handleAnswerChange = (event, index) => {\n    const newAnswers = [...answers];\n    newAnswers[index] = event.target.value;\n    setAnswers(newAnswers);\n  };\n\n  const renderAnswerInputs = () => {\n    const inputs = [];\n    for (let i = 0; i < 10; i++) {\n      // 10 questions in the exam\n      inputs.push(\n        <div key={i}>\n          <label htmlFor={`answer${i}`}>Question {i + 1}:</label>\n          <input\n            type=\"text\"\n            id={`answer${i}`}\n            value={answers[i] || \"\"}\n            onChange={(event) => handleAnswerChange(event, i)}\n            disabled={!isActive}\n          />\n        </div>\n      );\n    }\n    return inputs;\n  };\n\n  const submitAnswers = () => {\n    // TODO: submit the answers to the server\n    // fetch(\"/students\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //     // Authorization: `Bearer ${token}`\n    //   },\n    //   body: JSON.stringify({\n    //     student_id: student,\n    //     course_id: course,\n    //     message: messages,\n    //   }),\n    // })\n    //   .then((res) => res.json())\n    //   .then((response) => console.log(response));\n    // console.log(\"Answers submitted:\", answers);\n  };\n\n  return (\n    <div className=\"mt-5 ml-10\">\n      <h1>Exam</h1>\n      <p>Time Left: {timeLeft} seconds</p>\n      <form onSubmit={handleFinishExam}>\n        {renderAnswerInputs()}\n        {isActive ? (\n          <button type=\"submit\">Finish Exam</button>\n        ) : (\n          <div>\n            {/* {renderAnswerInputs()} */}\n            <button type=\"submit\" onClick={submitAnswers}>\n              Submit Answers\n            </button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default ExamPage;\n\n"],"mappings":"sgCAAAC,GAAA,IAAAC,IAAA,yBAEnD,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CACrB,IAAAC,SAAA,CAAgCP,QAAQ,CAAC,EAAE,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAAkB;AAC9C,IAAAI,UAAA,CAAgCZ,QAAQ,CAAC,IAAI,CAAC,CAAAa,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAvCE,QAAQ,CAAAD,UAAA,IAAEE,WAAW,CAAAF,UAAA,IAC5B,IAAAG,UAAA,CAA8BhB,QAAQ,CAAC,EAAE,CAAC,CAAAiB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAnCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAE1BhB,SAAS,CAAC,UAAM,CACd,GAAI,CAAAmB,QAAQ,CAAG,IAAI,CACnB,GAAIV,QAAQ,GAAK,CAAC,CAAE,CAClBK,WAAW,CAAC,KAAK,CAAC,CACpB,CAAC,IAAM,IAAID,QAAQ,CAAE,CACnBM,QAAQ,CAAGC,WAAW,CAAC,UAAM,CAC3BV,WAAW,CAACD,QAAQ,CAAG,CAAC,CAAC,CAC3B,CAAC,CAAE,GAAG,CAAC,CACT,CACA,MAAO,kBAAM,CAAAY,aAAa,CAACF,QAAQ,CAAC,GACtC,CAAC,CAAE,CAACV,QAAQ,CAAEI,QAAQ,CAAC,CAAC,CAExB,GAAM,CAAAS,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIC,KAAK,CAAK,CAClCA,KAAK,CAACC,cAAc,EAAE,CACtBC,aAAa,EAAE,CACjB,CAAC,CAED,GAAM,CAAAC,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAIH,KAAK,CAAEI,KAAK,CAAK,CAC3C,GAAM,CAAAC,UAAU,CAAAC,kBAAA,CAAOZ,OAAO,CAAC,CAC/BW,UAAU,CAACD,KAAK,CAAC,CAAGJ,KAAK,CAACO,MAAM,CAACC,KAAK,CACtCb,UAAU,CAACU,UAAU,CAAC,CACxB,CAAC,CAED,GAAM,CAAAI,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAA,CAAS,CAC/B,GAAM,CAAAC,MAAM,CAAG,EAAE,CAAC,IAAAC,KAAA,UAAAA,MAAAC,CAAA,CACW,CAC3B;AACAF,MAAM,CAACG,IAAI,cACTlC,KAAA,QAAAmC,QAAA,eACEnC,KAAA,UAAOoC,OAAO,UAAAC,MAAA,CAAWJ,CAAC,CAAG,CAAAE,QAAA,EAAC,WAAS,CAACF,CAAC,CAAG,CAAC,CAAC,GAAC,GAAQ,cACvD/B,IAAA,UACEoC,IAAI,CAAC,MAAM,CACXC,EAAE,UAAAF,MAAA,CAAWJ,CAAC,CAAG,CACjBJ,KAAK,CAAEd,OAAO,CAACkB,CAAC,CAAC,EAAI,EAAG,CACxBO,QAAQ,CAAE,SAAAA,SAACnB,KAAK,QAAK,CAAAG,kBAAkB,CAACH,KAAK,CAAEY,CAAC,CAAC,EAAC,CAClDQ,QAAQ,CAAE,CAAC9B,QAAS,EACpB,GARMsB,CAAC,CASL,CACP,CACH,CAAC,CAdD,IAAK,GAAI,CAAAA,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,EAAE,CAAEA,CAAC,EAAE,EAAAD,KAAA,CAAAC,CAAA,GAe3B,MAAO,CAAAF,MAAM,CACf,CAAC,CAED,GAAM,CAAAR,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,CACD,CAED,mBACEvB,KAAA,QAAK0C,SAAS,CAAC,YAAY,CAAAP,QAAA,eACzBjC,IAAA,OAAAiC,QAAA,CAAI,MAAI,EAAK,cACbnC,KAAA,MAAAmC,QAAA,EAAG,aAAW,CAAC5B,QAAQ,CAAC,UAAQ,GAAI,cACpCP,KAAA,SAAM2C,QAAQ,CAAEvB,gBAAiB,CAAAe,QAAA,EAC9BL,kBAAkB,EAAE,CACpBnB,QAAQ,cACPT,IAAA,WAAQoC,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,aAAW,EAAS,cAE1CjC,IAAA,QAAAiC,QAAA,cAEEjC,IAAA,WAAQoC,IAAI,CAAC,QAAQ,CAACM,OAAO,CAAErB,aAAc,CAAAY,QAAA,CAAC,gBAE9C,EAAS,EAEZ,GACI,GACH,CAEV,CAAC,CAED,cAAe,CAAAhC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}